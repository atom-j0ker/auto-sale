<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.1.xsd">

    <context:annotation-config/>
    <tx:annotation-driven/>

    <security:http auto-config='true'>
        <security:intercept-url pattern="/admin-page" access="hasRole('ROLE_ADMIN')"/>
        <!--<security:intercept-url pattern="/user/**" access="hasRole('ROLE_USER')" />-->
        <security:intercept-url pattern="/announcement-add" access="hasRole('ROLE_USER')" />
        <security:intercept-url pattern="/**" access="permitAll"/>
        <security:form-login login-page="/authorization" username-parameter="username" password-parameter="password" default-target-url="/all-announcements"/>
        <security:form-login login-page="/" username-parameter="username" password-parameter="password" default-target-url="/all-announcements" />
        <security:logout logout-success-url="/all-announcements"/>
        <security:csrf disabled="true"/>
    </security:http>

    <bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <security:authentication-manager>
        <security:authentication-provider>
            <security:password-encoder ref="encoder"/>
            <security:jdbc-user-service data-source-ref="dataSource"
                                        users-by-username-query=
                                                "select username, password, enabled from users where username=?"
                                        authorities-by-username-query=
                                                "select username, role from users where username=?"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://localhost:3306/auto"/>
        <property name="username" value="root"/>
        <property name="password" value="root"/>
    </bean>

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <bean id="autoDAO" class="com.auto.crud.AutoDAO"/>
    <bean id="brandDAO" class="com.auto.crud.BrandDAO"/>
    <bean id="modelDAO" class="com.auto.crud.ModelDAO"/>
    <bean id="usersDAO" class="com.auto.crud.UsersDAO"/>

</beans>